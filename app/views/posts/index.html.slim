.row
  .medium-8.columns
    h2.text-center
      = title("Posts")

    - unless posts.present?
      | There are no posts yet

    - if params[:blog_id].present?
      h4.text-center
        = User.find(params[:blog_id]).full_name
        | 's posts
      - unless policy(post).manage?
        - if @subscription.present?
          - session[:return_to] = request.referer
          = link_to "Unsubscribe", { controller: "subscriptions", action: "destroy", id: @subscription.id }, { method: "delete" }
        - else
          - session[:return_to] = request.referer
          = link_to "Subscribe", { controller: "subscriptions", action: "create", blog_id: params[:blog_id], post_id: post.id }, { method: post }
          - session.delete(:return_to)

    - posts.each do |post|
      - if params[:blog_id].present?
        - if post.user_id == params[:blog_id].to_i
          h3 = link_to(post.title, post)
          = truncate(post.body, length: 500, separator: " ")
      - else
        h3 = link_to(post.title, post)
        = truncate(post.body, length: 500, separator: " ")

    .paginator
      = paginate(posts)
  .medium-3.medium-offset-1.columns
    h3
      | Anything else?

    = link_to "My posts", posts_path(blog_id: current_user.id)
    br
    = link_to "All posts", posts_path

    h3
      = title("My subscriptions")

    ul
      - @subscriptions.each do |subscription|
        - if subscription.user_id == current_user.id
          li
            = link_to User.find(subscription.blog_id).full_name, posts_path(blog_id: subscription.blog_id)

    h3
      = title("All blogs")

    ul
      - @all_blogs.each do |blog|
        li
          = link_to User.find(blog).full_name, posts_path(blog_id: blog)
